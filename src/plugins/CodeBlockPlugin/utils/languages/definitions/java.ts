import { type LanguageDefinition, TokenType } from '../../../types';

export const javaDefinition: LanguageDefinition = {
  name: 'java',
  patterns: {
    [TokenType.Comment]: /^\/\/.*$|^\/\*[\s\S]*?\*\//,
    [TokenType.String]: /^"(?:\\.|[^"\\])*"|^'(?:\\.|[^'\\])*'/,
    [TokenType.Number]: /^\b(?:0x[0-9a-fA-F]+|\d+(?:\.\d+)?(?:[eE][+-]?\d+)?[dDfF]?)\b/,
    [TokenType.Function]: /^\b[a-zA-Z_]\w*(?=\s*\()/,
    [TokenType.Type]: /^\b(?:void|boolean|byte|char|short|int|long|float|double|String|Object)\b/,
    [TokenType.Decorator]: /^@\w+/,
    [TokenType.Operator]: /^(?:->|::|\+\+|--|&&|\|\||[+\-*/%&|^<>!=]=?)/,
    [TokenType.Punctuation]: /^[{}[\]();,.]/,
  },
  keywords: [
    'abstract',
    'assert',
    'break',
    'case',
    'catch',
    'class',
    'const',
    'continue',
    'default',
    'do',
    'else',
    'enum',
    'extends',
    'final',
    'finally',
    'for',
    'if',
    'implements',
    'import',
    'instanceof',
    'interface',
    'native',
    'new',
    'package',
    'private',
    'protected',
    'public',
    'return',
    'static',
    'strictfp',
    'super',
    'switch',
    'synchronized',
    'this',
    'throw',
    'throws',
    'transient',
    'try',
    'var',
    'void',
    'volatile',
    'while',
    'true',
    'false',
    'null',
  ],
};
