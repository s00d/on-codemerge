import { type LanguageDefinition, TokenType } from '../../../types';

export const erlangDefinition: LanguageDefinition = {
  name: 'erlang',
  patterns: {
    [TokenType.Comment]: /^%.*$/,
    [TokenType.String]: /^"(?:[^"\\]|\\.)*"/,
    [TokenType.Number]: /^\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b/,
    [TokenType.Function]: /^\b[a-z]\w*(?=\s*\()/,
    [TokenType.Atom]: /^'[^']*'/,
    [TokenType.Variable]: /^\b[A-Z_]\w*/,
    [TokenType.Operator]: /^(?:->|::|\+\+|--|=:=|=\/=|>=|=<|[+\-*/%<>!=]=?)/,
    [TokenType.Punctuation]: /^[{}[\]();,.]/,
  },
  keywords: [
    'after',
    'and',
    'andalso',
    'band',
    'begin',
    'bnot',
    'bor',
    'bsl',
    'bsr',
    'bxor',
    'case',
    'catch',
    'cond',
    'div',
    'end',
    'fun',
    'if',
    'let',
    'not',
    'of',
    'or',
    'orelse',
    'receive',
    'rem',
    'try',
    'when',
    'xor',
  ],
};
