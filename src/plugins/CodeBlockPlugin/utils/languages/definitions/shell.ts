import { type LanguageDefinition, TokenType } from '../../../types';

export const shellDefinition: LanguageDefinition = {
  name: 'shell',
  patterns: {
    [TokenType.Comment]: /^#.*$/,
    [TokenType.String]: /^"(?:\\.|[^"\\])*"|^'[^']*'/,
    [TokenType.Variable]: /^\$\{?[\w-]+\}?|\$[\d*@#?$!_]/,
    [TokenType.Function]: /^\b[a-zA-Z_]\w*(?=\s*\(\))/,
    [TokenType.Command]:
      /^\b(?:cd|pwd|ls|cp|mv|rm|mkdir|chmod|chown|grep|find|sed|awk|curl|wget|tar|gzip|ssh|git|docker|npm|yarn)\b/,
    [TokenType.Operator]: /^(?:&&|\|\||>>|<<|[|>&])/,
    [TokenType.Punctuation]: /^[{}[\]();]/,
    [TokenType.Parameter]: /^--?[\w-]+/,
  },
  keywords: [
    'if',
    'then',
    'else',
    'elif',
    'fi',
    'case',
    'esac',
    'for',
    'while',
    'until',
    'do',
    'done',
    'in',
    'function',
    'time',
    'select',
    'break',
    'continue',
    'return',
    'exit',
    'export',
    'local',
    'readonly',
    'set',
    'unset',
    'shift',
    'source',
    'test',
  ],
};
