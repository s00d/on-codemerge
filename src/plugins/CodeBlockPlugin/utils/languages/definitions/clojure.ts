import { type LanguageDefinition, TokenType } from '../../../types';

export const clojureDefinition: LanguageDefinition = {
  name: 'clojure',
  patterns: {
    [TokenType.Comment]: /^;.*/,
    [TokenType.String]: /^"(?:[^"\\]|\\.)*"/,
    [TokenType.Number]: /^-?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?M?/,
    [TokenType.Function]: /^\((?:def|defn|fn)[\s\S]*?\)/,
    [TokenType.Symbol]: /^'[^()\s]+/,
    [TokenType.Keyword]: /^:[^()\s]+/,
    [TokenType.Operator]: /^[+\-*/%<>!=]/,
    [TokenType.Punctuation]: /^[()[\]{}]/,
  },
  keywords: [
    'def',
    'defn',
    'defmacro',
    'defprotocol',
    'defrecord',
    'deftype',
    'fn',
    'if',
    'do',
    'let',
    'loop',
    'recur',
    'when',
    'cond',
    'for',
    'doseq',
    'case',
    'try',
    'catch',
    'finally',
    'throw',
    'quote',
    'var',
    'new',
    'set!',
  ],
};
