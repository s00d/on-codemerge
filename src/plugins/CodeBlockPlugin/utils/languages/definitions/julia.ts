import { type LanguageDefinition, TokenType } from '../../../types';

export const juliaDefinition: LanguageDefinition = {
  name: 'julia',
  patterns: {
    [TokenType.Comment]: /^#=[\s\S]*?=#|^#.*/,
    [TokenType.String]: /^"(?:[^"\\]|\\.)*"|^'(?:[^'\\]|\\.)*'/,
    [TokenType.Number]: /^\b(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:im)?\b/,
    [TokenType.Function]: /^\b[a-zA-Z_]\w*(?=\s*\()/,
    [TokenType.Type]: /^\b(?:Int|Float64|String|Bool|Char|Nothing|Any)\b/,
    [TokenType.Operator]: /^(?:\.{3}|::|->|[+\-*/%&|^<>!=]=?)/,
    [TokenType.Punctuation]: /^[{}[\]();,.]/,
  },
  keywords: [
    'abstract',
    'baremodule',
    'begin',
    'break',
    'catch',
    'const',
    'continue',
    'do',
    'else',
    'elseif',
    'end',
    'export',
    'false',
    'finally',
    'for',
    'function',
    'global',
    'if',
    'import',
    'let',
    'local',
    'macro',
    'module',
    'mutable',
    'primitive',
    'quote',
    'return',
    'struct',
    'true',
    'try',
    'type',
    'using',
    'while',
  ],
};
