{"version":3,"file":"index-_Tz9txsk.js","sources":["../../packages/editor/src/index.ts","../../packages/toolbar/src/index.ts","../../packages/popup/src/index.ts","../../src/index.ts","../../packages/textStylingButton/src/index.ts","../../packages/tableButton/src/TableManager.ts","../../packages/tableButton/src/index.ts","../../packages/undoRedoButton/src/index.ts","../../packages/listButton/src/ListManager.ts","../../packages/listButton/src/index.ts","../../packages/alignButton/src/index.ts","../../packages/spacerButton/src/index.ts","../../packages/textDecorationButton/src/index.ts","../../packages/linkAndVideoButton/src/index.ts","../../src/dev.ts"],"sourcesContent":["import {EditorCore, IEditorModule} from \"../../../src\";\n\nexport class EditorPlugin implements IEditorModule {\n  private editorElement: HTMLDivElement|null = null;\n  private savedRange: Range | null = null;\n\n  initialize(core: EditorCore): void {\n    // Создание и настройка элемента редактора\n    this.editorElement = document.createElement('div');\n    this.editorElement.contentEditable = 'true';\n    this.editorElement.innerText = core.getContent();\n    core.appElement.appendChild(this.editorElement);\n\n    this.applyStyles();\n\n    // Подписка на изменения содержимого и обновление интерфейса\n    this.editorElement.innerHTML = core.getContent();\n\n    // Подписка на изменения содержимого и обновление интерфейса\n    core.subscribeToContentChange((newContent: string) => {\n      if (this.editorElement?.innerHTML !== newContent) {\n        this.editorElement!.innerHTML = newContent;\n        this.restoreCaretPosition();\n      }\n    });\n\n    // Обработчик для обновления содержимого в ядре\n    this.editorElement.addEventListener('input', () => {\n      this.saveCaretPosition();\n      core.setContent(this.editorElement!.innerHTML);\n    });\n  }\n\n  private applyStyles(): void {\n    if (this.editorElement) {\n      this.editorElement.style.border = '1px solid #ccc'; // Рамка\n      this.editorElement.style.minHeight = '140px';\n      this.editorElement.style.height = 'calc(100% - 20px)'; // Высота для 10 строк примерно\n      this.editorElement.style.overflow = 'auto'; // Прокрутка при необходимости\n      this.editorElement.style.padding = '10px'; // Отступы внутри блока\n      this.editorElement.style.boxSizing = 'border-box'; // Чтобы размеры включали padding и border\n      // Другие необходимые стили...\n    }\n  }\n\n  private saveCaretPosition() {\n    const selection = window.getSelection();\n    if (selection && selection.rangeCount > 0) {\n      this.savedRange = selection.getRangeAt(0);\n    }\n  }\n\n  private restoreCaretPosition() {\n    const selection = window.getSelection();\n    if (selection && this.savedRange) {\n      selection.removeAllRanges();\n      selection.addRange(this.savedRange);\n    }\n  }\n\n  getEditorElement(): HTMLDivElement|null {\n    return this.editorElement;\n  }\n}\n\nexport default EditorPlugin;\n","import { EditorCore, IEditorModule } from \"../../../src\";\n\nexport class ToolbarPlugin implements IEditorModule {\n  private toolbarElement: HTMLDivElement|null = null;\n\n  initialize(core: EditorCore): void {\n    // Создание панели инструментов\n    this.toolbarElement = document.createElement('div');\n    this.toolbarElement.className = 'editor-toolbar';\n\n    this.applyStyles()\n\n    // Добавление панели инструментов в DOM\n    core.appElement.appendChild(this.toolbarElement);\n  }\n\n  // Доступ к элементу панели инструментов для других плагинов\n  getToolbarElement(): HTMLDivElement|null {\n    return this.toolbarElement;\n  }\n\n  private applyStyles(): void {\n    if (this.toolbarElement) {\n      this.toolbarElement.style.padding = '10px';\n      this.toolbarElement.style.borderBottom = '1px solid #ccc';\n      this.toolbarElement.style.backgroundColor = '#f9f9f9';\n      this.toolbarElement.style.display = 'flex';\n      this.toolbarElement.style.alignItems = 'center';\n      // Другие стили...\n    }\n  }\n}\n\nexport default ToolbarPlugin;\n","import { EditorCore, IEditorModule } from \"../../../src\";\n\nexport class SelectionPopupPlugin implements IEditorModule {\n  private popupElement: HTMLDivElement | null = null;\n\n  initialize(core: EditorCore): void {\n    // Создание элемента попапа\n    this.popupElement = document.createElement('div');\n    this.popupElement.style.display = 'none'; // Изначально скрыт\n    this.popupElement.style.position = 'absolute';\n    this.popupElement.style.zIndex = '1000';\n    this.popupElement.style.background = '#fff';\n    this.popupElement.style.border = '1px solid #ccc';\n    this.popupElement.style.padding = '5px';\n    // Добавьте здесь другие стили для попапа\n\n    document.body.appendChild(this.popupElement);\n\n    // Добавление обработчика событий выделения текста\n    core.appElement.addEventListener('mouseup', (event) => this.handleTextSelection(event, core));\n  }\n\n  private handleTextSelection(event: MouseEvent, core: EditorCore): void {\n    const selection = window.getSelection();\n    if (selection && selection.rangeCount > 0 && !selection.isCollapsed) {\n      // Выделенный текст существует\n      const range = selection.getRangeAt(0);\n      const rect = range.getBoundingClientRect();\n      this.showPopup(rect);\n    } else {\n      // Текст не выделен\n      this.hidePopup();\n    }\n  }\n\n  showPopup(rect: DOMRect): void {\n    if (this.popupElement) {\n      this.popupElement.style.display = 'block';\n      this.popupElement.style.left = `${rect.left + window.scrollX}px`;\n      this.popupElement.style.top = `${rect.bottom + window.scrollY}px`;\n      // Добавьте здесь контент для попапа, например кнопки или другие элементы\n    }\n  }\n\n  hidePopup(): void {\n    if (this.popupElement) {\n      this.popupElement.style.display = 'none';\n    }\n  }\n\n  getPopupElement(): HTMLDivElement|null {\n    return this.popupElement;\n  }\n}\n\nexport default SelectionPopupPlugin;\n","import EditorPlugin from \"../packages/editor/src\";\nimport ToolbarPlugin from \"../packages/toolbar/src\";\nimport SelectionPopupPlugin from \"../packages/popup/src\";\nimport './styles.scss';\n\nexport class EditorState {\n  private content: string = '';\n  private history: string[] = [];\n  private future: string[] = [];\n  private readonly limit = 30;\n\n  getContent(): string {\n    return this.content;\n  }\n\n  setContent(newContent: string): void {\n    this.future = []; // Очистить будущее при каждом новом изменении\n    this.history.push(this.content); // Сохраняем текущее состояние в историю\n\n    if (this.history.length > this.limit) {\n      this.history.shift(); // Удаляем самый старый элемент, если превышен лимит\n    }\n\n    this.content = newContent;\n  }\n\n  isUndo() {\n    return this.history.length > 0\n  }\n\n  isRedo() {\n    return this.future.length > 0\n  }\n\n  undo(): string {\n    if (this.history.length > 0) {\n      const state = this.history.pop();\n      this.future.push(this.content);\n\n      if (this.future.length > this.limit) {\n        this.future.shift(); // Аналогично для массива future\n      }\n\n      return this.content = state || '';\n    }\n    return this.getContent()\n  }\n\n  redo(): string {\n    if (this.future.length > 0) {\n      const state = this.future.pop();\n      this.history.push(this.content);\n\n      if (this.history.length > this.limit) {\n        this.history.shift(); // Аналогично для массива history\n      }\n\n      return this.content = state || '';\n    }\n    return this.getContent()\n  }\n\n  // Другие методы для управления состоянием\n}\n\nexport class EventManager {\n  private listeners: { [event: string]: Function[] } = {};\n\n  subscribe(event: string, callback: Function): void {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n    this.listeners[event].push(callback);\n  }\n\n  publish(event: string, data?: any): void {\n    if (this.listeners[event]) {\n      this.listeners[event].forEach(callback => callback(data));\n    }\n  }\n\n  // Другие методы для управления событиями\n}\n\n\nexport interface IEditorModule {\n  initialize(core: EditorCore): void;\n  // Другие необходимые методы и свойства\n}\n\nexport class EditorCore {\n  public state: EditorState;\n  public eventManager: EventManager;\n  public modules: IEditorModule[] = [];\n  public appElement: HTMLElement;\n  public generalElement: HTMLElement;\n  public toolbar: ToolbarPlugin;\n  public popup: SelectionPopupPlugin;\n  public editor: EditorPlugin;\n  public history: string[] = []\n  public currentSelectionRange: Range | null = null;\n\n  constructor(appElement: HTMLElement) {\n    this.state = new EditorState();\n    this.eventManager = new EventManager();\n    this.generalElement = appElement;\n    this.generalElement.innerHTML = \"\";\n\n    this.appElement = document.createElement('div');\n    this.generalElement.appendChild(this.appElement)\n    this.applyStyles();\n\n    this.toolbar = new ToolbarPlugin;\n    this.popup = new SelectionPopupPlugin;\n    this.editor = new EditorPlugin;\n    this.registerModule(this.toolbar);\n    this.registerModule(this.popup);\n    this.registerModule(this.editor);\n\n    this.generalElement.addEventListener('keydown', this.handleKeydown);\n  }\n\n  saveCurrentSelection() {\n    const selection = window.getSelection();\n    if (selection && selection.rangeCount > 0) {\n      this.currentSelectionRange = selection.getRangeAt(0);\n    } else {\n      this.currentSelectionRange = null;\n    }\n  }\n\n  restoreCurrentSelection() {\n    if (this.currentSelectionRange) {\n      const selection = window.getSelection();\n      if(!selection) return;\n      selection.removeAllRanges();\n      selection.addRange(this.currentSelectionRange);\n      this.appElement.focus();\n    }\n  }\n\n  private handleKeydown = (event: KeyboardEvent): void => {\n    const isUndo = (event.ctrlKey || event.metaKey) && event.key === 'z' && !event.shiftKey;\n    const isRedo = (event.ctrlKey || event.metaKey) && event.key === 'z' && event.shiftKey;\n\n    if (isUndo) {\n      this.undo();\n    } else if (isRedo) {\n      this.redo();\n    }\n  }\n\n  undo() {\n    const newContent = this.state.undo();\n    this.setContent(this.state.getContent());\n    this.eventManager.publish('contentChanged', newContent);\n  }\n\n  redo() {\n    const newContent = this.state.redo();\n    this.setContent(this.state.getContent());\n    this.eventManager.publish('contentChanged', newContent);\n  }\n\n  isUndo() {\n    return this.state.isUndo()\n  }\n\n  isRedo() {\n    return this.state.isRedo()\n  }\n\n  private applyStyles(): void {\n    if (this.appElement) {\n      this.appElement.style.border = '1px solid #ccc'; // Рамка\n      this.appElement.style.minHeight = '140px'; // Высота для 10 строк примерно\n      this.appElement.style.resize = 'both'; // Возможность изменять размер\n      this.appElement.style.overflow = 'auto'; // Прокрутка при необходимости\n      this.appElement.style.padding = '10px'; // Отступы внутри блока\n      this.appElement.style.boxSizing = 'border-box'; // Чтобы размеры включали padding и border\n      // Другие необходимые стили...\n    }\n  }\n\n  registerModule(module: IEditorModule): void {\n    this.modules.push(module);\n    module.initialize(this);\n  }\n\n  // Методы для доступа и изменения контента\n  getContent(): string {\n    return this.state.getContent();\n  }\n\n  setContent(newContent: string): void {\n    if (this.state.getContent() !== newContent) {\n      this.history.push(newContent);\n      this.state.setContent(newContent);\n      this.eventManager.publish('contentChanged', newContent);\n    }\n  }\n\n  // Методы для работы с событиями\n  subscribeToContentChange(callback: Function): void {\n    this.eventManager.subscribe('contentChanged', callback);\n  }\n}\n","import { EditorCore, IEditorModule } from \"@/index\";\n\nexport class TextStylingPlugin implements IEditorModule {\n  initialize(core: EditorCore): void {\n    this.createButton(core, 'Bold', 'bold');\n    this.createButton(core, 'Italic', 'italic');\n    this.createButton(core, 'Underline', 'underline');\n    this.createButton(core, 'StrikeThrough', 'strikeThrough');\n    this.createButton(core, 'Superscript', 'superscript');\n    this.createButton(core, 'Subscript', 'subscript');\n  }\n\n  private createButton(core: EditorCore, title: string, command: string): void {\n    const button = document.createElement('button');\n    button.classList.add('on-codemerge-button');\n    button.textContent = title;\n    button.addEventListener('click', () => {\n      const selection = window.getSelection();\n      const range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : null;\n\n      document.execCommand(command, false);\n\n      if (selection && range) {\n        selection!.removeAllRanges();\n        selection!.addRange(range);\n      }\n\n      core.appElement.focus(); // Возвращаем фокус в редактируемый элемент\n\n      document.execCommand(command, false);\n\n      core.popup.hidePopup();\n    });\n\n    const popup = core.popup.getPopupElement();\n    if (popup) popup.appendChild(button);\n  }\n}\n\nexport default TextStylingPlugin;\n","import {EditorCore} from \"@/index\";\n\nexport default class TableManager {\n  private table: HTMLTableElement;\n  private core: EditorCore;\n  private popupElement: HTMLDivElement;\n  private currentCell: HTMLTableCellElement | null = null; // Добавляем текущую выбранную ячейку\n  private selectedCells: HTMLTableCellElement[] = [];\n\n  private onRemove: () => void;\n  private onUpdate: () => void;\n\n  constructor(table: HTMLTableElement, core: EditorCore, onRemove: () => void, onUpdate: () => any) {\n    this.table = table;\n    this.core = core;\n    this.popupElement = this.createPopup();\n    this.initializeTable();\n    this.onRemove = onRemove;\n    this.onUpdate = onUpdate;\n  }\n\n  private initializeTable(): void {\n    Array.from(this.table.querySelectorAll('td')).forEach(cell => {\n      this.addResizeHandleToCell(cell);\n      cell.addEventListener('click', this.onCellClick);\n    });\n\n    this.table.addEventListener('contextmenu', (event: MouseEvent) => {\n      if (event.target instanceof HTMLTableCellElement) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.handleContextMenu(event, event.target);\n      }\n    });\n  }\n\n  private onCellClick = (event: MouseEvent): void => {\n    const cell = event.target as HTMLTableCellElement;\n    if (event.shiftKey) {\n      // Если нажата клавиша Ctrl, добавляем/удаляем ячейку из списка выбранных\n      const cellIndex = this.selectedCells.indexOf(cell);\n      if (cellIndex === -1) {\n        this.selectedCells.push(cell);\n        // Можно добавить визуальное выделение ячейки\n        cell.classList.add('selected');\n      } else {\n        this.selectedCells.splice(cellIndex, 1);\n        cell.classList.remove('selected');\n      }\n    }\n  };\n\n  private createPopup(): HTMLDivElement {\n    const popup = document.createElement('div');\n    // Стилизация и инициализация попапа\n    popup.style.display = 'none';\n    popup.style.position = 'absolute';\n    popup.style.zIndex = '1000';\n    popup.style.background = '#fff';\n    popup.style.border = '1px solid #ccc';\n    popup.style.padding = '5px';\n    document.body.appendChild(popup);\n\n    // Кнопки и действия\n    this.createButton('Add Row', () => this.addRow(), popup);\n    this.createButton('Add Column', () => this.addColumn(), popup);\n    this.createButton('Remove Row', () => this.removeRow(), popup);\n    this.createButton('Remove Column', () => this.removeColumn(), popup);\n    this.createButton('Delete Table', () => this.removeTable(), popup);\n    this.createButton('Merge Cells', () => this.mergeCells(), popup);\n\n    const bgColorInput = document.createElement('input');\n    bgColorInput.type = 'color';\n    bgColorInput.addEventListener('input', () => {\n      this.setStyleToSelectedCells('backgroundColor', bgColorInput.value);\n      this.onUpdate()\n    });\n    popup.appendChild(bgColorInput);\n\n    return popup;\n  }\n\n  private setStyleToSelectedCells(styleProperty: string, value: string): void {\n    this.selectedCells.forEach(cell => {\n      cell.style[styleProperty as any] = value;\n    });\n  }\n\n  private createButton(text: string, action: () => void, popup: HTMLElement) {\n    const button = document.createElement('button');\n    button.textContent = text;\n    button.classList.add('on-codemerge-button');\n    button.addEventListener('click', () => {\n      action();\n      this.hidePopup();\n    });\n    popup.appendChild(button);\n  }\n\n  private handleContextMenu(event: MouseEvent, cell: HTMLTableCellElement): void {\n    event.preventDefault();\n    this.currentCell = cell; // Устанавливаем текущую ячейку\n    this.showPopup(event.pageX, event.pageY, cell);\n\n    if (this.selectedCells.indexOf(cell) === -1) {\n      this.selectedCells.push(cell);\n    }\n  }\n\n  private showPopup(x: number, y: number, cell: HTMLTableCellElement): void {\n    this.popupElement.style.left = `${x}px`;\n    this.popupElement.style.top = `${y}px`;\n    this.popupElement.style.display = 'block';\n\n    document.addEventListener('click', this.onDocumentClick);\n  }\n\n  private hidePopup(): void {\n    this.popupElement.style.display = 'none';\n    document.removeEventListener('click', this.onDocumentClick);\n  }\n\n  private onDocumentClick = (event: MouseEvent): void => {\n    // Проверяем, что клик произошел вне попапа\n    if (!this.popupElement.contains(event.target as Node)) {\n      this.hidePopup();\n    }\n  };\n\n  private addResizeHandleToCell(cell: HTMLElement): void {\n    const resizer = document.createElement('div');\n    resizer.classList.add('on-codemerge-resizer');\n    resizer.addEventListener('mousedown', (e) => this.startResizing(e, cell));\n    cell.appendChild(resizer);\n  }\n\n  private startResizing(event: MouseEvent, cell: HTMLElement): void {\n    const startX = event.clientX;\n    const startY = event.clientY;\n    const startWidth = cell.offsetWidth;\n    const startHeight = cell.offsetHeight;\n\n    const doDrag = (e: MouseEvent) => {\n      const newWidth = startWidth + e.clientX - startX;\n      const newHeight = startHeight + e.clientY - startY;\n      cell.style.width = `${newWidth}px`;\n      cell.style.height = `${newHeight}px`;\n    };\n\n    const stopDrag = () => {\n      document.documentElement.removeEventListener('mousemove', doDrag, false);\n      document.documentElement.removeEventListener('mouseup', stopDrag, false);\n      this.onUpdate();\n    };\n\n    document.documentElement.addEventListener('mousemove', doDrag, false);\n    document.documentElement.addEventListener('mouseup', stopDrag, false);\n  }\n\n\n  private mergeCells(): void {\n    if (this.selectedCells.length >= 1) {\n      const firstCell = this.selectedCells[0];\n      // Проверяем, объединены ли ячейки\n      if (firstCell.colSpan > 1 || firstCell.rowSpan > 1) {\n        const colSpan = firstCell.colSpan;\n        const rowSpan = firstCell.rowSpan;\n        // Разъединяем ячейки\n        firstCell.colSpan = 1;\n        firstCell.rowSpan = 1;\n        // Воссоздаем ячейки, которые были объединены\n        // Воссоздание горизонтально объединенных ячеек\n        for (let i = 1; i < colSpan; i++) {\n          const raw = firstCell.parentElement! as HTMLTableRowElement\n          const newCell = raw.insertCell(firstCell.cellIndex + 1);\n          // Установите начальное содержимое и другие атрибуты для newCell\n        }\n\n        // Воссоздание вертикально объединенных ячеек\n        if (rowSpan > 1) {\n          const raw = firstCell.parentElement! as HTMLTableRowElement\n          const rowIndex = raw.rowIndex;\n          for (let i = 1; i < rowSpan; i++) {\n            const newRow = this.table.insertRow(rowIndex + i);\n            const newCell = newRow.insertCell(0);\n            newCell.colSpan = colSpan;\n            // Установите начальное содержимое и другие атрибуты для newCell\n          }\n        }\n      } else {\n        // Объединяем ячейки\n        firstCell.colSpan = this.selectedCells.length;\n        this.selectedCells.slice(1).forEach(cell => {\n          // @ts-ignore\n          firstCell.appendChild(...Array.from(cell.childNodes) as Node[]);\n          cell.remove();\n        });\n      }\n\n      this.selectedCells.forEach(cell => cell.classList.remove('selected'));\n\n      // Очищаем массив выбранных ячеек после объединения или разъединения\n      this.selectedCells = [];\n    }\n\n    this.onUpdate();\n  }\n\n  public createHeaders(cols: number): void {\n    const thead = this.table.createTHead();\n    const headerRow = thead.insertRow();\n    for (let j = 0; j < cols; j++) {\n      const th = document.createElement('th');\n      th.textContent = `Header ${j + 1}`;\n      headerRow.appendChild(th);\n    }\n  }\n\n  addRow(): void {\n    // Проверяем, есть ли строки в таблице\n    if (this.table.rows.length === 0) {\n      const newRow = this.table.insertRow();\n      for (let i = 0; i < this.table.rows[0].cells.length; i++) {\n        const newCell = newRow.insertCell();\n        newCell.textContent = 'New Cell';\n        this.addResizeHandleToCell(newCell);\n      }\n    } else {\n      const newRow = this.table.insertRow(1);\n\n      for (let i = 0; i < this.table.rows[0].cells.length; i++) {\n        const newCell = newRow.insertCell();\n        newCell.textContent = 'New Cell';\n        this.addResizeHandleToCell(newCell);\n      }\n    }\n    this.onUpdate();\n  }\n\n  private addColumn(): void {\n    if (!this.currentCell) return;\n    const colIndex = this.currentCell.cellIndex;\n\n    Array.from(this.table.rows).forEach((row: any) => {\n      const newCell = row.insertCell(colIndex + 1); // Добавляем колонку после текущей выбранной колонки\n      newCell.textContent = 'New Cell';\n      this.addResizeHandleToCell(newCell);\n    });\n  }\n\n  private removeRow(): void {\n    if (!this.currentCell || this.table.rows.length <= 1) return;\n    const parent =  this.currentCell.parentElement as any\n    const rowIndex = parent.rowIndex;\n    this.table.deleteRow(rowIndex); // Удаляем текущую выбранную строку\n    this.onUpdate();\n  }\n\n  private removeColumn(): void {\n    if (!this.currentCell || this.table.rows[0].cells.length <= 1) return;\n    const colIndex = this.currentCell.cellIndex;\n\n    Array.from(this.table.rows).forEach((row: any) => {\n      if (row.cells.length > 1) row.deleteCell(colIndex); // Удаляем текущую выбранную колонку\n    });\n    this.onUpdate();\n  }\n\n  private removeTable(): void {\n    this.hidePopup();\n    this.popupElement.remove()\n    if (this.currentCell) this.currentCell.remove()\n    this.table.remove(); // Удаляем всю таблицу\n    this.onRemove();\n  }\n\n}\n","import { EditorCore, IEditorModule } from \"@/index\";\nimport TableManager from './TableManager';\n\nexport class TableButtonPlugin implements IEditorModule {\n  private core: EditorCore | null = null;\n  private tableManagerMap: Map<HTMLTableElement, TableManager> = new Map();\n\n  initialize(core: EditorCore): void {\n    this.core = core;\n    this.injectStyles();\n    this.createTableButton();\n\n    core.subscribeToContentChange((newContent: string) => {\n      this.reloadTables(core)\n    });\n  }\n\n  public reloadTables(core: EditorCore): void {\n    const editor = core.editor.getEditorElement();\n    if (!editor) return;\n\n    const tables = editor.querySelectorAll('table');\n    tables.forEach((table: HTMLTableElement) => {\n      if (!this.tableManagerMap.has(table)) {\n        // Если для этой таблицы еще нет TableManager, создаем его\n        const tableManager = new TableManager(\n          table,\n          core,\n          () => this.removeTableManager(table),\n          () => core.setContent(editor.innerHTML)\n        );\n        this.tableManagerMap.set(table, tableManager);\n      }\n    });\n  }\n\n  private removeTableManager(table: HTMLTableElement): void {\n    this.tableManagerMap.delete(table);\n  }\n\n  private injectStyles(): void {\n    const style = document.createElement('style');\n    style.type = 'text/css';\n    style.innerHTML = `\n            .on-codemerge-resizer {\n                width: 5px;\n                height: 5px;\n                background: gray;\n                position: absolute;\n                right: 0;\n                bottom: 0;\n                cursor: nwse-resize;\n            }\n        `;\n    document.head.appendChild(style);\n  }\n\n  private createTableButton(): void {\n    const button = document.createElement('button');\n    button.textContent = 'Create 3x3 Table';\n    button.classList.add('on-codemerge-button');\n    button.addEventListener('click', () => this.createTable(3, 3));\n    const toolbar = this.core?.toolbar.getToolbarElement();\n    toolbar?.appendChild(button);\n  }\n\n  private createTable(rows: number, cols: number): void {\n    if (!this.core) return;\n\n    const table = document.createElement('table');\n    table.classList.add('on-codemerge-table');\n\n    const editor = this.core?.editor.getEditorElement();\n    // Создаем экземпляр TableManager для управления таблицей\n    const manager = new TableManager(\n      table,\n      this.core,\n      () => this.removeTableManager(table),\n      () => editor && this.core ? this.core.setContent(editor.innerHTML) : null,\n    );\n    manager.createHeaders(cols);\n\n    for (let i = 0; i < rows; i++) {\n      manager.addRow(); // Используем TableManager для добавления строк\n    }\n\n    this.insertTableIntoEditor(table);\n\n    this.tableManagerMap.set(table, manager);\n  }\n\n  private insertTableIntoEditor(table: HTMLTableElement): void {\n    const editor = this.core?.editor.getEditorElement();\n    const selection = window.getSelection();\n\n    if (selection && selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      let container = range.commonAncestorContainer;\n\n      // Проверяем, что выделение находится внутри редактора\n      while (container && container !== editor) {\n        if (!container.parentNode) {\n          editor?.appendChild(table);\n          return;\n        }\n        container = container.parentNode;\n      }\n\n      if (container) {\n        range.deleteContents(); // Удаляем текущее содержимое в выделенном диапазоне\n        range.insertNode(table); // Вставляем таблицу в выделенный диапазон\n      }\n      selection.removeAllRanges();\n    } else if (editor) {\n      // Если нет выделения, вставляем таблицу в конец редактора\n      editor.appendChild(table);\n    }\n\n    if (this.core && editor) this.core.setContent(editor.innerHTML); // Обновляем содержимое редактора\n  }\n}\n\nexport default TableButtonPlugin;\n","import { EditorCore, IEditorModule } from \"@/index\";\n\nexport class UndoRedoButtonPlugin implements IEditorModule {\n  initialize(core: EditorCore): void {\n    const createUndoButton = () => {\n      const button = document.createElement('button');\n      button.classList.add('on-codemerge-button');\n      button.textContent = 'Undo';\n      button.disabled = true;\n      button.addEventListener('click', () => {\n        core.undo()\n      });\n      return button;\n    };\n\n    const createRedoButton = () => {\n      const button = document.createElement('button');\n      button.classList.add('on-codemerge-button');\n      button.textContent = 'Redo';\n      button.disabled = true;\n      button.addEventListener('click', () => {\n        core.redo()\n      });\n      return button;\n    };\n\n    // Получаем панель инструментов и попап\n    const toolbar = core.toolbar.getToolbarElement();\n\n    const undo = createUndoButton()\n    const redo = createRedoButton()\n\n    // Добавляем кнопку на панель инструментов и в попап\n    if(toolbar) toolbar.appendChild(undo);\n    if(toolbar) toolbar.appendChild(redo);\n\n    core.subscribeToContentChange((newContent: string) => {\n      console.log(core.isUndo(), core.isRedo())\n      undo.disabled = !core.isUndo();\n      redo.disabled = !core.isRedo();\n    });\n  }\n}\n\nexport default UndoRedoButtonPlugin;\n","import { EditorCore } from \"@/index\";\n\nexport default class ListManager {\n  private listElement: HTMLUListElement | HTMLOListElement;\n  private core: EditorCore;\n\n  constructor(listElement: HTMLUListElement | HTMLOListElement, core: EditorCore) {\n    this.listElement = listElement;\n    this.core = core;\n    this.initializeList();\n  }\n\n  private initializeList(): void {\n    this.listElement.addEventListener('keydown', this.handleKeyDown);\n    this.listElement.addEventListener('contextmenu', this.handleContextMenu);\n  }\n\n  private handleKeyDown = (event: Event): void => {\n    const keyboardEvent = event as KeyboardEvent;\n    const target = event.target as HTMLLIElement;\n    if (keyboardEvent.key === 'Enter') {\n      event.preventDefault();\n      if (target.textContent?.trim()) {\n        const newLi = document.createElement('li');\n        newLi.contentEditable = 'true';\n        target.parentNode?.insertBefore(newLi, target.nextSibling);\n        newLi.focus();\n      } else if (target.previousSibling || target.nextSibling) {\n        target.remove();\n      }\n    }\n  };\n\n  private handleContextMenu = (event: Event): void => {\n    event.preventDefault();\n\n    const mouseEvent = event as MouseEvent;\n\n    const contextMenu = document.createElement('div');\n    contextMenu.style.position = 'absolute';\n    contextMenu.style.left = `${mouseEvent.clientX}px`;\n    contextMenu.style.top = `${mouseEvent.clientY}px`;\n    contextMenu.style.background = 'white';\n    contextMenu.style.border = '1px solid #ccc';\n    contextMenu.style.padding = '5px';\n\n    const ulOption = document.createElement('button');\n    ulOption.textContent = 'Bulleted list';\n    ulOption.addEventListener('click', () => this.changeListType('ul'));\n\n    const olOption = document.createElement('button');\n    olOption.textContent = 'Numbered list';\n    olOption.addEventListener('click', () => this.changeListType('ol'));\n\n    contextMenu.appendChild(ulOption);\n    contextMenu.appendChild(olOption);\n\n    document.body.appendChild(contextMenu);\n\n    // Добавляем обработчик для закрытия контекстного меню при клике в любом месте\n    const closeContextMenu = () => {\n      document.body.removeChild(contextMenu);\n      document.body.removeEventListener('click', closeContextMenu);\n    };\n\n    document.body.addEventListener('click', closeContextMenu);\n  };\n\n  private changeListType(type: 'ul' | 'ol'): void {\n    const newList = document.createElement(type);\n    while (this.listElement.firstChild) {\n      newList.appendChild(this.listElement.firstChild);\n    }\n\n    this.listElement.parentNode?.replaceChild(newList, this.listElement);\n    this.listElement = newList as HTMLUListElement | HTMLOListElement;\n    this.initializeList();\n  }\n}\n","import { EditorCore, IEditorModule } from \"@/index\";\nimport ListManager from './ListManager';\nexport class ListButtonPlugin implements IEditorModule {\n  private core: EditorCore | null = null;\n  private listManagerMap: Map<HTMLUListElement | HTMLOListElement, ListManager> = new Map();\n\n  initialize(core: EditorCore): void {\n    this.core = core;\n    this.createListButton();\n  }\n\n  private createListButton(): void {\n    const button = document.createElement('button');\n    button.textContent = 'Create List';\n    button.classList.add('on-codemerge-button');\n    button.addEventListener('click', () => this.createList());\n    const toolbar = this.core?.toolbar.getToolbarElement();\n    toolbar?.appendChild(button);\n  }\n\n  private createList(): void {\n    if (!this.core) return;\n\n    const ul = document.createElement('ul');\n    ul.classList.add('on-codemerge-list')\n    for (let i = 0; i < 3; i++) {\n      const li = document.createElement('li');\n      li.textContent = `Item ${i + 1}`;\n      li.contentEditable = 'true';\n      ul.appendChild(li);\n    }\n\n    const editor = this.core?.editor.getEditorElement();\n    editor?.appendChild(ul);\n    this.core?.setContent(editor?.innerHTML || '');\n\n    const listManager = new ListManager(ul, this.core);\n    this.listManagerMap.set(ul, listManager);\n  }\n}\n\nexport default ListButtonPlugin;\n","import { EditorCore, IEditorModule } from \"@/index\";\n\nexport class AlignButtonPlugin implements IEditorModule {\n  initialize(core: EditorCore): void {\n    const toolbar = core.toolbar.getToolbarElement();\n    const popup = core.popup.getPopupElement();\n\n    const alignButtons = [\n      { align: 'left', text: 'Align Left' },\n      { align: 'right', text: 'Align Right' },\n      { align: 'center', text: 'Align Center' },\n      { align: 'justifyFull', text: 'Justify' }\n    ];\n\n    alignButtons.forEach(({ align, text }) => {\n      const createButton = () => {\n        const button = document.createElement('button');\n        button.classList.add('on-codemerge-button');\n        button.textContent = text;\n        button.addEventListener('click', () => {\n          this.applyAlignment(core, align);\n        });\n        return button;\n      }\n\n      if (toolbar) toolbar.appendChild(createButton());\n      if (popup) popup.appendChild(createButton());\n    });\n  }\n\n  private applyAlignment(core: EditorCore, align: string): void {\n    const selection = window.getSelection();\n    if (!selection || selection.rangeCount === 0) return;\n\n    const range = selection.getRangeAt(0);\n    const container = range.commonAncestorContainer;\n\n    // Найти или создать элемент для применения стиля выравнивания\n    let element = container.nodeType === 3 ? container.parentNode : container;\n    if (element && element.nodeType === 1) {\n      (element as HTMLElement).style.textAlign = align;\n      const editor = core.editor.getEditorElement();\n      if(editor) core.setContent(editor.innerHTML); // Обновить состояние редактора\n    }\n  }\n}\n\nexport default AlignButtonPlugin;\n","import { EditorCore, IEditorModule } from \"@/index\";\n\nexport class SpacerButtonPlugin implements IEditorModule {\n  initialize(core: EditorCore): void {\n    const toolbar = core.toolbar.getToolbarElement();\n\n    // Создаем элемент-разделитель\n    const spacer = document.createElement('div');\n    spacer.style.display = 'inline-block';\n    spacer.style.margin = '0 5px'; // Устанавливаем ширину пробела\n    spacer.style.height = '20px'; // Устанавливаем ширину пробела\n    spacer.style.border = '1px solid gray'; // Устанавливаем ширину пробела\n\n    // Добавляем разделитель на панель инструментов\n    if (toolbar) toolbar.appendChild(spacer);\n  }\n}\n\nexport default SpacerButtonPlugin;\n","import { EditorCore, IEditorModule } from \"@/index\";\n\nexport class TextDecorationButtonPlugin implements IEditorModule {\n  initialize(core: EditorCore): void {\n    this.createStyleButtons(core);\n  }\n\n  private createStyleButtons(core: EditorCore): void {\n    this.createButton(core, 'Text Color', 'foreColor');\n    this.createButton(core, 'Background Color', 'backColor');\n\n    this.createFontPicker(core, 'Font');\n    this.createFontSizePicker(core, 'Font Size');\n  }\n\n  private createButton(core: EditorCore, title: string, command: string): void {\n    const input = document.createElement('input');\n    input.type = 'color';\n    input.title = title;\n    input.addEventListener('input', () => {\n      document.execCommand(command, false, input.value);\n    });\n\n\n    const popup = core.popup.getPopupElement();\n    if (popup) popup.appendChild(input);\n  }\n\n  private createFontPicker(core: EditorCore, title: string): void {\n    const select = document.createElement('select');\n    select.title = title;\n    const fonts = ['Arial', 'Courier New', 'Georgia', 'Times New Roman', 'Verdana'];\n    fonts.forEach(font => {\n      const option = document.createElement('option');\n      option.value = font;\n      option.textContent = font;\n      select.appendChild(option);\n    });\n    select.addEventListener('change', () => {\n      document.execCommand('fontName', false, select.value);\n    });\n\n    const popup = core.popup.getPopupElement();\n    if (popup) popup.appendChild(select);\n  }\n\n  private createFontSizePicker(core: EditorCore, title: string): void {\n    const input = document.createElement('input');\n    input.type = 'number';\n    input.title = title;\n    input.value = '3';\n    input.min = '1';\n    input.max = '20'; // Устанавливаем разумный диапазон размеров шрифта\n\n    input.addEventListener('mousedown', () => {\n      core.saveCurrentSelection()\n    })\n\n    input.addEventListener('input', () => {\n      core.restoreCurrentSelection()\n\n      // Применяем размер шрифта\n      document.execCommand('fontSize', false, input.value);\n    });\n\n    const popup = core.popup.getPopupElement();\n    if (popup) popup.appendChild(input);\n  }\n}\n\nexport default TextDecorationButtonPlugin;\n","import {EditorCore, IEditorModule} from \"@/index\";\n\nexport class LinkAndVideoPlugin implements IEditorModule {\n  private links: Map<string, HTMLElement>  = new Map();\n  initialize(core: EditorCore): void {\n    this.createButton(core, 'Insert Link', () => this.insertLink(core));\n    this.createButton(core, 'Insert Video', () => this.insertVideo(core));\n\n    const css = `\n.modal {\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.4);\n  padding-top: 60px;\n}\n.modal-content {\n  background-color: #fefefe;\n  margin: 5% auto;\n  padding: 20px;\n  border: 1px solid #888;\n  width: 70%;\n}\n.close {\n  color: #aaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n.close:hover,\n.close:focus {\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n}\n`;\n\n    const styleSheet = document.createElement(\"style\");\n    styleSheet.type = \"text/css\";\n    styleSheet.innerText = css;\n    document.head.appendChild(styleSheet);\n\n    core.subscribeToContentChange((newContent: string) => {\n      const editor = core.editor.getEditorElement();\n      if (!editor) return;\n\n      editor.querySelectorAll('a, iframe').forEach((element: any) => {\n        const url = element.tagName === 'A' ? element.getAttribute('href') : element.getAttribute('src');\n        const isUrl = element.tagName === 'A';\n\n        console.log(url, this.links.has(url))\n\n        // if (!this.links.has(url)) {\n        //   this.links.set(element, element);\n        //\n        //   if(isUrl) {\n        //     element.addEventListener('click', () => {\n        //       this.createModal((url, text) => {\n        //         element.src = url;\n        //       }, element.src)\n        //     })\n        //   } else {\n        //     element.addEventListener('click', () => {\n        //       this.createModal((url, text) => {\n        //         element.href = url;\n        //         element.textContent = text || url;\n        //       }, element.href, element.textContent?.toString())\n        //     })\n        //   }\n        // }\n      });\n    });\n  }\n\n  private createButton(core: EditorCore, title: string, action: () => void): void {\n    const button = document.createElement('button');\n    button.classList.add('on-codemerge-button');\n    button.textContent = title;\n    button.addEventListener('click', action);\n\n    const toolbar = core.toolbar.getToolbarElement();\n    if (toolbar) toolbar.appendChild(button);\n  }\n\n  private insertLink(core: EditorCore): void {\n    core.saveCurrentSelection();\n    this.createModal((url, text) => {\n      core.restoreCurrentSelection();\n      const link = document.createElement('a');\n      link.href = url;\n      link.target = '_blank';\n      link.textContent = text || url; // Используем URL в качестве текста, если текст не задан\n\n      link.addEventListener('click', (e) => {\n        this.createModal((url, text) => {\n          link.href = url;\n          link.textContent = text || url;\n          this.links.set(url, link);\n        }, link.href, link.textContent?.toString())\n      })\n      this.insertHTMLIntoEditor(core, link);\n      this.links.set(url, link);\n    });\n  }\n\n  private insertVideo(core: EditorCore): void {\n    core.saveCurrentSelection();\n    this.createModal((url, text) => {\n      core.restoreCurrentSelection();\n      const iframe = document.createElement('iframe');\n      iframe.src = url;\n      iframe.frameBorder = '0';\n      iframe.allowFullscreen = true;\n      iframe.width = '560'; // Установите желаемую ширину\n      iframe.height = '315'; // Установите желаемую высоту\n\n      iframe.addEventListener('click', (e) => {\n        this.createModal((url, text) => {\n          iframe.src = url;\n          this.links.set(url, iframe);\n        }, iframe.src)\n      })\n      this.insertHTMLIntoEditor(core, iframe);\n      this.links.set(url, iframe);\n    });\n  }\n\n  private insertHTMLIntoEditor(core: EditorCore, html: HTMLElement): void {\n    const editor = core.editor.getEditorElement();\n    const selection = window.getSelection();\n\n    if (selection && selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      let container = range.commonAncestorContainer;\n\n      while (container && container !== editor) {\n        if (!container.parentNode) {\n          editor?.appendChild(html);\n          return;\n        }\n        container = container.parentNode;\n      }\n\n      if (container) {\n        range.deleteContents(); // Удаляем текущее содержимое в выделенном диапазоне\n        range.insertNode(html); // Вставляем таблицу в выделенный диапазон\n      }\n      selection.removeAllRanges();\n    } else if (editor) {\n      // Если нет выделения, вставляем контент в конец редактора\n      editor.appendChild(html);\n    }\n\n    // Обновляем содержимое редактора\n    if (core && editor) core.setContent(editor.innerHTML);\n  }\n\n  createModal(callback: (url: string, text: string) => void, url = '', text = '') {\n    // Создаем элементы модального окна\n    const modal = document.createElement('div');\n    modal.className = 'modal';\n\n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n\n    const closeButton = document.createElement('span');\n    closeButton.className = 'close';\n    closeButton.innerHTML = '&times;';\n    closeButton.onclick = () => modal.style.display = 'none';\n\n    const urlInput = document.createElement('input');\n    urlInput.id = 'modal-url';\n    urlInput.value = url;\n    urlInput.placeholder = 'URL';\n\n    const textInput = document.createElement('input');\n    textInput.id = 'modal-text';\n    textInput.value = text;\n    textInput.placeholder = 'Text';\n\n    const submitButton = document.createElement('button');\n    submitButton.innerText = 'Insert';\n    submitButton.onclick = () => {\n      // Логика вставки ссылки/видео\n      const url = urlInput.value;\n      const text = textInput.value;\n\n      callback(url, text)\n      // ... Вставка контента ...\n      modal.remove();\n    };\n\n    // Добавление элементов в модальное окно\n    modalContent.appendChild(closeButton);\n    modalContent.appendChild(urlInput);\n    modalContent.appendChild(textInput);\n    modalContent.appendChild(submitButton);\n    modal.appendChild(modalContent);\n\n    // Добавление модального окна в DOM\n    document.body.appendChild(modal);\n\n    return modal;\n  }\n}\n\nexport default LinkAndVideoPlugin;\n","import { EditorCore } from '@/index';\nimport { TextStylingPlugin } from '../packages/textStylingButton/src';\nimport { TableButtonPlugin } from '../packages/tableButton/src';\nimport { UndoRedoButtonPlugin } from '../packages/undoRedoButton/src';\nimport { ListButtonPlugin } from '../packages/listButton/src';\nimport { AlignButtonPlugin } from '../packages/alignButton/src';\nimport { SpacerButtonPlugin } from '../packages/spacerButton/src';\nimport { TextDecorationButtonPlugin } from '../packages/textDecorationButton/src';\nimport { LinkAndVideoPlugin } from '../packages/linkAndVideoButton/src';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const appElement = document.getElementById('app');\n  if (appElement) {\n    const editor = new EditorCore(appElement);\n    editor.registerModule(new UndoRedoButtonPlugin);\n    editor.registerModule(new SpacerButtonPlugin);\n    editor.registerModule(new TextDecorationButtonPlugin);\n    editor.registerModule(new TextStylingPlugin);\n    editor.registerModule(new TableButtonPlugin);\n    editor.registerModule(new ListButtonPlugin);\n    editor.registerModule(new SpacerButtonPlugin);\n    editor.registerModule(new AlignButtonPlugin);\n    editor.registerModule(new SpacerButtonPlugin);\n    editor.registerModule(new LinkAndVideoPlugin);\n\n    editor.subscribeToContentChange((newContent: string) => {\n\n      const resultElement = document.getElementById('result');\n      if (resultElement) resultElement.innerText = newContent;\n      // console.log(newContent)\n\n      const previewElement = document.getElementById('preview');\n      if (previewElement) previewElement.innerHTML = newContent;\n    });\n\n    // editor.setContent(\"\\n\" +\n    //     \"<table class=\\\"on-codemerge-table\\\"><thead><tr><th>Header 1</th><th>Header 2</th><th>Header 3</th></tr></thead><tbody><tr><td style=\\\"position: relative;\\\">Row 1 Col 1<div class=\\\"on-codemerge-resizer\\\"></div></td><td style=\\\"position: relative;\\\">Row 1 Col 2<div class=\\\"on-codemerge-resizer\\\"></div></td><td style=\\\"position: relative;\\\">Row 1 Col 3<div class=\\\"on-codemerge-resizer\\\"></div></td></tr><tr><td style=\\\"position: relative;\\\">Row 2 Col 1<div class=\\\"on-codemerge-resizer\\\"></div></td><td style=\\\"position: relative;\\\">Row 2 Col 2<div class=\\\"on-codemerge-resizer\\\"></div></td><td style=\\\"position: relative;\\\">Row 2 Col 3<div class=\\\"on-codemerge-resizer\\\"></div></td></tr><tr><td style=\\\"position: relative;\\\">Row 3 Col 1<div class=\\\"on-codemerge-resizer\\\"></div></td><td style=\\\"position: relative;\\\">Row 3 Col 2<div class=\\\"on-codemerge-resizer\\\"></div></td><td style=\\\"position: relative;\\\">Row 3 Col 3<div class=\\\"on-codemerge-resizer\\\"></div></td></tr></tbody></table>\")\n  }\n});\n"],"names":["EditorPlugin","__publicField","core","newContent","_a","selection","ToolbarPlugin","SelectionPopupPlugin","event","rect","EditorState","state","EventManager","callback","data","EditorCore","appElement","isUndo","isRedo","module","TextStylingPlugin","title","command","button","range","popup","TableManager","table","onRemove","onUpdate","cell","cellIndex","bgColorInput","styleProperty","value","text","action","x","y","resizer","e","startX","startY","startWidth","startHeight","doDrag","newWidth","newHeight","stopDrag","firstCell","colSpan","rowSpan","i","rowIndex","newCell","cols","headerRow","j","th","newRow","colIndex","row","TableButtonPlugin","editor","tableManager","style","toolbar","rows","manager","container","UndoRedoButtonPlugin","createUndoButton","createRedoButton","undo","redo","ListManager","listElement","keyboardEvent","target","newLi","_b","mouseEvent","contextMenu","ulOption","olOption","closeContextMenu","type","newList","ListButtonPlugin","ul","li","listManager","AlignButtonPlugin","align","createButton","element","SpacerButtonPlugin","spacer","TextDecorationButtonPlugin","input","select","font","option","LinkAndVideoPlugin","css","styleSheet","url","link","iframe","html","modal","modalContent","closeButton","urlInput","textInput","submitButton","resultElement","previewElement"],"mappings":"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"}